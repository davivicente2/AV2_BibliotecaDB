// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace AV2_Biblioteca_Final.Model.Models;

public partial class BibliotecaDBContext : DbContext
{
    public BibliotecaDBContext()
    {
    }

    public BibliotecaDBContext(DbContextOptions<BibliotecaDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Autores> Autores { get; set; }

    public virtual DbSet<Livros> Livros { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=PC-DAVI\\SQLEXPRESS;Initial Catalog=BibliotecaDB;Integrated Security=True;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Autores>(entity =>
        {
            entity.HasKey(e => e.AutorId).HasName("PK__Autores__F58AE9290E9BCAE6");

            entity.Property(e => e.DataNascimento).HasColumnType("date");
            entity.Property(e => e.Nacionalidade).HasMaxLength(255);
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<Livros>(entity =>
        {
            entity.HasKey(e => e.LivroId).HasName("PK__Livros__548655FD87629F0E");

            entity.Property(e => e.AnoPublicacao).HasColumnType("date");
            entity.Property(e => e.Isbn)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Titulo).HasMaxLength(255);

            entity.HasOne(d => d.Autor).WithMany(p => p.Livros)
                .HasForeignKey(d => d.AutorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Livros__AutorId__7F2BE32F");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}